// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
  IN in[16], load, address[3];
  OUT out[16];

  PARTS:
    // Uses the address bits to select for the correct register
    DMux8Way(in=load, sel=address, a=reg1In, b=reg2In, c=reg3In, d=reg4In, e=reg5In, f=reg6In, g=reg7In, h=reg8In);
    
    // Allocating all 8 registers and connecting load bits
    Register(in=in, load=reg1In, out=reg1Out);
    Register(in=in, load=reg2In, out=reg2Out);
    Register(in=in, load=reg3In, out=reg3Out);
    Register(in=in, load=reg4In, out=reg4Out);
    Register(in=in, load=reg5In, out=reg5Out);
    Register(in=in, load=reg6In, out=reg6Out);
    Register(in=in, load=reg7In, out=reg7Out);
    Register(in=in, load=reg8In, out=reg8Out);

    // 3 Way Mux to output the correct register output
    Mux8Way16(a=reg1Out, b=reg2Out, c=reg3Out, d=reg4Out, e=reg5Out, f=reg6Out, g=reg7Out, h=reg8Out, sel=address, out=out);        
}